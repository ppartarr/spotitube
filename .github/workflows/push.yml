name: push

on:
  push:
    branches:
      - rewrite
  pull_request:
    branches:
      - rewrite

permissions:
  contents: read
  pull-requests: read

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5
  codespell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: codespell-project/actions-codespell@v1
        with:
          check_filenames: true
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: golangci/golangci-lint-action@v3
  gofumpt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
      - run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go install mvdan.cc/gofumpt@latest
          if gofumpt -l -e . | grep '^' -q; then exit 1; fi
  go-channel-closure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: test "$(grep -r --exclude-dir=".git*" 'make(chan ' | wc -l)" = "$(grep -r --exclude-dir=".git*" '\sclose(' | wc -l)"
  go-http-body-closure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: test "$(grep -r --exclude-dir=".git*" 'http.Get(\|http.Head(\|http.DefaultClient.Do(\|util.HttpRequest(' | wc -l)" = "$(grep -r --exclude-dir=".git*" '.Body.Close()' | wc -l)"
  go-monkey-unpatch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: test "$(grep -Erc --exclude-dir=".git*" 'defer [a-zA-Z0-9]+.Reset\(\)$')" = "$(grep -Erc --exclude-dir=".git*" 'defer [a-zA-Z0-9]+.Reset\(\)$')"
  test:
    runs-on: ubuntu-latest
    needs: [commitlint, codespell, golangci-lint, gofumpt, go-channel-closure, go-http-body-closure, go-monkey-unpatch]
    if: success()
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
      - run: |
          go test -v -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out | grep -E '^total:.*100.0%$'
  build:
    runs-on: ubuntu-latest
    needs: [test]
    if: success()
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
      - run: go build -v ./...
